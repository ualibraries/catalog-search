<?php
/**
 * @file
 * The Catalog Search module.
 *
 * The Catalog Search module provides a configurable UAL catalog search box.
 */

/** Hook implementations **/

/**
 * Implements hook_menu().
 */
function catalog_search_menu() {
  $items = array();

  $items['admin/config/search/catalog-search'] = array(
    'title' => 'Catalog Search',
    'description' => 'Configure Catalog Search.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('catalog_search_admin_settings'),
    'access arguments' => array('administer catalog search'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'catalog_search.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function catalog_search_permission() {
  return array(
    'administer catalog search' => array(
      'title' => t('Administer Catalog Search'),
      'description' => t('Customize the form text, choose available search types, and select the searchscope.'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function catalog_search_block_info() {
  $blocks['searchbox']['info'] = t('Catalog Search Box');

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function catalog_search_block_view($delta = '') {
  $block = array();
  if ($delta == 'searchbox') {
    drupal_add_css(drupal_get_path('module', 'catalog_search') . '/assets/css/catalog-search.css');
    drupal_add_js(drupal_get_path('module', 'catalog_search') . '/assets/js/catalog-search.js');
    $catalog_form = drupal_get_form('catalog_search_catalog_form');
    $block['subject'] = t('Search our catalog');
    $block['content'] = theme(
      'catalog_search',
      array(
        'catalog_form' => drupal_render($catalog_form),
        'help_text' => variable_get('catalog_search_help_text', ''),
      )
    );
  }

  return $block;
}

/**
 * Implements hook_theme().
 */
function catalog_search_theme() {
  return array(
    'catalog_search' => array(
      'variables' => array(
        'catalog_form' => 'catalog',
        'help_text' => 'HELP!',
      ),
      'template' => 'catalog_search',
    ),
  );
}

/** Forms **/

/**
 * Form constructor for the catalog search form.
 *
 * @see catalog_search_catalog_form_submit()
 *
 * @ingroup forms
 */
function catalog_search_catalog_form() {
  $search_type_options = array(
    'X' => t('Keyword'),
  );
  // todo: DRY this with catalog_search_admin_settings().
  foreach (array_filter(variable_get('catalog_search_additional_types', array())) as $type) {
    switch ($type) {
      case 't':
        $search_type_options[$type] = t('Title');
        break;

      case 'a':
        $search_type_options[$type] = t('Author');
        break;

      case 'c':
        $search_type_options[$type] = t('Call Number');
        break;

      case 's':
        $search_type_options[$type] = t('Journal Title');
        break;
    }
  }

  $form = array();

  if (count($search_type_options) > 1) {
    $form['search-type'] = array(
      '#type' => 'select',
      '#title' => t('Search Type'),
      '#default_value' => 'X',
      '#options' => $search_type_options,
    );
    $form['search-fields'] = array(
      '#markup' => '<div class="search-fields with-type">',
    );
  } else {
    $form['search-fields'] = array(
      '#markup' => '<div class="search-fields">',
    );
  }

  $form['search'] = array(
    '#type' => 'textfield',
    '#title' => t('Search'),
    '#maxlength' => PHP_INT_MAX,
    '#attributes' => array('placeholder' => variable_get('catalog_search_placeholder_text')),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Search'),
  );
  $form['loading-indicator'] = array(
    '#markup' => '<div class="loading"><span>Loadingâ€¦</span></div>',
  );
  $form['search-fields-end'] = array(
    '#markup' => '</div>',
  );
  if (variable_get('catalog_search_show_advanced', 1)) {
    $form['advanced-search'] = array(
      '#markup' => '<a class="advanced-search" href="' . _catalog_search_link($search_query = '',$search_type = 'X') . '">Advanced Search</a>',
    );
  }

  return $form;
}

/**
 * Form submission handler for homepage_search_catalog_form().
 *
 * @see catalog_search_catalog_form()
 */
function catalog_search_catalog_form_submit($form, &$form_state) {
  if (isset($form_state['values']['search'])) {
    $search_query = $form_state['values']['search'];
  } else {
    $search_query = '';
  }
  if (isset($form_state['values']['search-type'])) {
    $search_type = $form_state['values']['search-type'];
  } else {
    $search_type = 'X';
  }

  $form_state['redirect'] = _catalog_search_link($search_query, $search_type);
}

/** "Private" functions **/

/**
 * Create a scoped link to the catalog. The default scope is 9 - UA Library.
 *
 * @param string $search_query
 *   The search query. An empty string triggers the advanced keyword search page.
 * @param string $search_type
 *   Keyword, title, author, call number, or journal title. Defaults to X - keyword.
 *
 * @return string
 *   A link to the catalog including the query and search type.
 */
function _catalog_search_link($search_query, $search_type) {
  $catalog_root = "http://sabio.library.arizona.edu/search/";

  $http_query_parameters = array();

  if (!empty($search_query)) {
    $http_query_parameters['SEARCH'] = $search_query;
  } else {
    $http_query_parameters['NOSRCH'] = '';
  }

  $http_query_parameters['searchscope'] = variable_get('catalog_search_scope', 9);

  $http_query_string = _catalog_search_http_build_query($http_query_parameters);

  $catalog_link = $catalog_root . $search_type . '?' . $http_query_string;

  return $catalog_link;
}

/**
 * PHP 5.3-compatible http_build_query().
 *
 * @param array $parameters
 *   The http_build_query() parameters.
 *
 * @return string
 *   Query string
 */
function _catalog_search_http_build_query($parameters) {
  // PHP 5.4 only: $http_query_string = http_build_query(
  // $http_query_parameters, NULL, '&', PHP_QUERY_RFC3986);
  // PHP 5.3 doesn't have the enc_type parameter, so have to switch + to %20
  // manually.
  $http_query_string = http_build_query($parameters, NULL, '&');

  return str_replace('+', '%20', $http_query_string);
}
